.template 0
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Authors:
# Caner Candan <caner@candan.fr>, http://caner.candan.fr
#

if !defined(projectnode.oauth_scope)
  projectnode.oauth_scope = project.oauth_scope
endif

if !defined(projectnode.redirect_uri)
  projectnode.redirect_uri = project.redirect_uri
endif

for projectnode.service as sv
  gsl from "services/files_copy.gsl"
endfor

parentnode = projectnode.parent()

function add_service(oauth_scope, name)
  my.name ?= i.name

    new m.comment as c
      define c. = "Run through the OAuth flow and retrieve credentials"
    endnew

    new m.stmt as s
      define s. = "$(my.name)_flow = OAuth2WebServerFlow(CLIENT_ID, CLIENT_SECRET, '$(my.oauth_scope:)', redirect_uri=REDIRECT_URI)"
    endnew

    new m.stmt as s
      define s. = "$(my.name)_storage = Storage('credentials_$(my.name).dat')"
    endnew

    new m.stmt as s
      define s. = "$(my.name)_credentials = $(my.name)_storage.get()"
    endnew

    new m.stmt as s
      define s. = "if $(my.name)_credentials is None or $(my.name)_credentials.invalid:"
    endnew

    new m.stmt as s
      define s. = "    $(my.name)_credentials = run($(my.name)_flow, $(my.name)_storage)"
    endnew

    new m.newline
    endnew
endfunction

new parentnode.output as o
  o.name = projectnode.name
  o.binary = "True"

  new o.stmt as s
    define s. = "import httplib2"
  endnew

  new o.stmt as s
    define s. = "import pprint"
  endnew

  new o.stmt as s
    define s. = "import gspread"
  endnew

  new o.newline
  endnew

  new o.stmt as s
    define s. = "from apiclient.discovery import build"
  endnew

  new o.stmt as s
    define s. = "from oauth2client.file import Storage"
  endnew

  new o.stmt as s
    define s. = "from oauth2client.client import AccessTokenRefreshError, OAuth2WebServerFlow"
  endnew

  new o.stmt as s
    define s. = "from oauth2client.tools import run"
  endnew

  new o.newline
  endnew

  new o.comment as c
    define c. = "Copy your credentials from the console"
  endnew

  new o.stmt as s
    define s. = "CLIENT_ID = '$(project.client_id:)'"
  endnew

  new o.stmt as s
    define s. = "CLIENT_SECRET = '$(project.client_secret:)'"
  endnew

  new o.newline
  endnew

  # new o.comment as c
  #   define c. = "Check https://developers.google.com/drive/scopes for all available scopes"
  # endnew

  # new o.stmt as s
  #   define s. = "OAUTH_SCOPE = '$(projectnode.oauth_scope:)'"
  # endnew

  # new o.newline
  # endnew

  new o.comment as c
    define c. = "Redirect URI for installed apps"
  endnew

  new o.stmt as s
    define s. = "REDIRECT_URI = '$(projectnode.redirect_uri:)'"
  endnew

  new o.main as m

    for projectnode.import as i where defined(i.version)
      add_service('https://www.googleapis.com/auth/$(i.name)')

      new m.comment as c
        define c. = "Create an httplib2.Http object and authorize it with our credentials"
      endnew

      new m.stmt as s
        define s. = "$(i.name)_http = httplib2.Http()"
      endnew

      new m.stmt as s
        define s. = "$(i.name)_http = $(i.name)_credentials.authorize($(i.name)_http)"
      endnew

      new m.newline
      endnew

      new m.stmt as s
        define s. = "$(i.name)_service = build('$(i.name)', '$(i.version)', http=$(i.name)_http)"
      endnew

      new m.newline
      endnew
    endfor

    for projectnode.import as i where i.name = 'spreadsheets'
      add_service('https://spreadsheets.google.com/feeds https://docs.google.com/feeds', 'spreadsheets')

      new m.stmt as s
        define s. = "$(i.name)_gc = gspread.authorize($(i.name)_credentials)"
      endnew

      new m.newline
      endnew
    endfor

    for projectnode.service as sv

      for sv.action as a
        new m.stmt as s
          if defined(a.id)
            variable = "$(a.id:) = "
          endif
          define s. = "$(variable?'':)$(sv.name)_service.$(a.resource)().$(a.name)("
          for a.parameter as p
            s. += "$(p.name:)='$(p.:)', "
          endfor
          if defined(a->property)
            s. += "body={ "
            for a.property as p
              s. += "'$(p.name:)': \"\"\"$(p.:)\"\"\", "
            endfor
            s. += "}"
          endif
          s. += ").execute()"
        endnew # !stmt
      endfor # !action
    endfor # !service

    for projectnode.spreadsheets as ss
      new m.stmt as s
        define s. = "print $(ss.ref:)"
      endnew
      
      new m.stmt as s
        define s. = "wks = spreadsheets_gc.open_by_key($(ss.ref:)).sheet1"
      endnew

      for ss.update as u
        new m.stmt as s
          define s. = "wks.update_acell('$(u.key:)', \"\"\"$(u.value:)\"\"\")"
        endnew
      endfor
    endfor

  endnew # !main

endnew # !output

.endtemplate